<?xml version="1.0"?>
<?if $(sys.BUILDARCH) = x64?>
<?define PFDir = ProgramFiles64Folder?>
<?else?>
<?define PFDir = ProgramFilesFolder?>
<?endif?>

<!-- This file is used for creating a BASE product installation.
	 In other words this is for Paratext 8.0 only.
	 Every other Paratext 8.X.Y.Z will be a Major Upgrade, Minor Upgrade, or Small Update of this installation.
-->
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
		xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <Product Name='$(var.ApplicationName) $(var.MajorVersion) Packages'
			Id='$(var.ProductCode)'
			UpgradeCode='$(var.UpgradeCode)'
			Language='1033'
			Codepage='1252'
			Version='$(var.VersionNumber)'
			Manufacturer='$(var.Manufacturer)'>

	<Package Id='*'
			Keywords='Installer'
			Description="$(var.ApplicationName) $(var.MajorVersion).$(var.MinorVersion) Installer"
			Comments='comments'
			Manufacturer='$(var.Manufacturer)'
			InstallerVersion='300'
			Languages='1033'
			Compressed='yes'
			SummaryCodepage='1252'
			InstallPrivileges='elevated'
			InstallScope='perMachine'/>

	<Upgrade Id='$(var.UpgradeCode)'>
	  <UpgradeVersion OnlyDetect='yes' Property='SELFFOUND'
		Minimum='$(var.VersionNumber)' IncludeMinimum='yes'
		Maximum='$(var.VersionNumber)' IncludeMaximum='yes'/>
	  <UpgradeVersion OnlyDetect='yes' Property='NEWERFOUND'
		Minimum='$(var.VersionNumber)' IncludeMinimum='no' />
	  <UpgradeVersion OnlyDetect='no' Property='PREVIOUSFOUND'
		Minimum='0.0.0' IncludeMinimum='yes'
		Maximum='$(var.VersionNumber)' IncludeMaximum='no' />
	</Upgrade>

	<Icon Id="Installer_Icon.ico" SourceFile="..\resources\Installer.ico" />
	<Icon Id="Application_Icon.ico" SourceFile="..\resources\App.ico" />
	<Property Id="BUNDLE_ID_GUID" Value='DefaultValue'/>
	<Property Id="FULL_VERSION_NUMBER" Value='$(var.VersionNumber)'/>
	<Property Id="ARPPRODUCTICON" Value="Installer_Icon.ico" />
	<Property Id='ARPNOREMOVE'>1</Property>
	<Property Id="DISPLAYNAME" Value="$(var.ApplicationName) $(var.MajorVersion)" />
	<?include ../Common/Overrides.wxi?>

	<Binary Id="MyCustomActionsDll"
		SourceFile="../CustomActions/CustomActions/bin/Release/CustomActions.CA.dll" />

	<CustomAction Id="CheckApplicationPath"
		Return="check"
		Execute="immediate"
		BinaryKey="MyCustomActionsDll"
		DllEntry="CheckAppPath"  />

	<CustomAction Id="DeleteRegistryVersionNumber"
		Return="check"
		Execute="immediate"
		BinaryKey="MyCustomActionsDll"
		DllEntry="DeleteVersionNumberFromRegistry"  />
	<Property Id='REGISTRYVERSIONKEY' Value='$(var.SafeApplicationName)\\Version' />

	<CustomAction Id="CloseApplications"
		Return="check"
		BinaryKey="MyCustomActionsDll"
		DllEntry="ClosePrompt"  />
	<!-- The following two properties can be comma separted lists, but they must have the same number of items. -->
	<Property Id='PromptToCloseProcesses' Value='$(var.SafeApplicationName)' />
	<Property Id='PromptToCloseDisplayNames' Value='$(var.ApplicationName)' />

	<!--<CustomAction Id="SetFontValues"
		Return="check"
		Execute="immediate"
		BinaryKey="MyCustomActionsDll"
		DllEntry="LookForInstalledFonts"  />
	<Property Id="DOULOS_INSTALLED" Value='False'/>
	<Property Id="SBLHEB_INSTALLED" Value='False'/>
	<Property Id="CHARIS_INSTALLED" Value='False'/>
	<Property Id="APPARATUS_INSTALLED" Value='False'/>
	<Property Id="GALATIA_INSTALLED" Value='False'/>
	<Property Id="EZRA_INSTALLED" Value='False'/>-->

	<Property Id="DATAFOLDER" Secure='yes'>
	  <RegistrySearch Id='RegSearchDataFolder' Root='HKLM' Key='SOFTWARE\[REGISTRYKEY]' Name='[DATAFOLDERREGSZNAME]' Type='raw'/>
	</Property>

	<CustomAction Id='SetDefDataFolder' Property='DEFDATAFOLDER' Value='[WindowsVolume]My$(var.SafeApplicationName)DataFolder' />
	<Property Id="DATAFOLDERFOUND" Value="unset" />
	<CustomAction Id="VerifyDataPath"
		Return="check"
		Execute="immediate"
		BinaryKey="MyCustomActionsDll"
		DllEntry="VerifyDataDirPath"  />
	<SetProperty Id='REGISTRYKEY' Value='$(var.SafeApplicationName)\\$(var.MajorVersion)'  Before="AppSearch">not REGISTRYKEY</SetProperty>
	<SetProperty Id='APPFOLDERREGSZNAME' Value='Program_Files_Directory_$(var.SafeApplicationName)'  Before="AppSearch">not APPFOLDERREGSZNAME</SetProperty>
	<SetProperty Id='DATAFOLDERREGSZNAME' Value='Settings_Directory'  Before="AppSearch">not DATAFOLDERREGSZNAME</SetProperty>
	<SetProperty Id='HARVESTDATAFOLDERREGSZNAME' Value='Data_Directory'  Before="AppSearch">not HARVESTDATAFOLDERREGSZNAME</SetProperty>
	<CustomAction Id='UseDefDataFolder' Property='DATAFOLDER' Value='[DEFDATAFOLDER]' />
	<CustomAction Id='UseOvrDataFolder' Property='DATAFOLDER' Value='[OVRDATAFOLDER]' /> <!-- from Overrides.wxi -->
	<CustomAction Id='UseRegDataFolder' Property='DATAFOLDER' Value='[REGDATAFOLDER]' />
	<!-- TODO (HASSO) 2018.02: if there is no OVRHARVESTDATAFOLDER, make HARVESTDATAFOLDER whatever the user picked for DATAFOLDER -->
	<CustomAction Id='UseDefHarvestDataFolder' Property='HARVESTDATAFOLDER' Value='[DATAFOLDER]' />
	<CustomAction Id='UseOvrHarvestDataFolder' Property='HARVESTDATAFOLDER' Value='[OVRHARVESTDATAFOLDER]' /> <!-- from Overrides.wxi -->


	<CustomAction Id='AlreadyUpdated' Error='Version [ProductVersion] of $(var.ApplicationName) is already installed.' />
	<CustomAction Id='NoDowngrade' Error='A later version of $(var.ApplicationName) is already installed.' />
	<CustomAction Id='CheckUpgradeValue' Property='ISUPGRADE' Value='True' />
	<CustomAction Id='CheckPatchValue' Property='ISPATCH' Value='True' />

	<InstallExecuteSequence>
		<Custom Action="CloseApplications" Before="AppSearch"></Custom>
		<!--<Custom Action="SetFontValues" After="AppSearch"></Custom>-->
		<Custom Action="DeleteRegistryVersionNumber" Before="RemoveRegistryValues">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>
		<RemoveExistingProducts Before="InstallInitialize" />
		<Custom Action='AlreadyUpdated' After='FindRelatedProducts'>SELFFOUND</Custom>
		<Custom Action='NoDowngrade' After='FindRelatedProducts'>NEWERFOUND</Custom>
		<Custom Action="CheckPatchValue" Before="CheckUpgradeValue">PATCHNEWSUMMARYSUBJECT="Small Update Patch"</Custom>
		<Custom Action="CheckUpgradeValue" After="InstallFinalize">PREVIOUSFOUND</Custom>
	</InstallExecuteSequence>

	<InstallUISequence>
		<Custom Action="SetDefDataFolder" After="FindRelatedProducts"></Custom>
		<Custom Action="VerifyDataPath" After="SetDefDataFolder"></Custom>
		<Custom Action="UseDefAppFolder" After="AppSearch">(NOT REGAPPFOLDER) and (NOT OVRAPPFOLDER)</Custom>
		<Custom Action="UseOvrAppFolder" After="AppSearch">(NOT REGAPPFOLDER) and (OVRAPPFOLDER)</Custom>
		<Custom Action="UseRegAppFolder" After="AppSearch">REGAPPFOLDER</Custom>
		<Custom Action="UseDefDataFolder" After="AppSearch">(NOT REGDATAFOLDER) and (NOT OVRDATAFOLDER)</Custom>
		<Custom Action="UseOvrDataFolder" After="AppSearch">(NOT REGDATAFOLDER) and (OVRDATAFOLDER)</Custom>
		<Custom Action="UseRegDataFolder" After="AppSearch">REGDATAFOLDER</Custom>
		<Custom Action="UseDefHarvestDataFolder" After="AppSearch">NOT OVRHARVESTDATAFOLDER</Custom>
		<Custom Action="UseOvrHarvestDataFolder" After="AppSearch">OVRHARVESTDATAFOLDER</Custom>
	</InstallUISequence>

	<Media Id='1' Cabinet='AppTemplate.cab' EmbedCab='yes' DiskPrompt="CD-ROM #1" />
	<Property Id='DiskPrompt' Value="$(var.ApplicationName) $(var.MajorVersion).$(var.MinorVersion) Installation [1]" />

	<WixVariable Id="WixUIBannerBmp" Value="..\resources\bannrbmp.bmp" />
	<WixVariable Id="WixUIDialogBmp" Value="..\resources\MsiBackground.bmp" />

	<SetProperty Id="DEFAPPFOLDER" Value="[$(var.PFDir)]$(var.SafeApplicationName)$(var.MajorVersion)\" Before="AppSearch">not DEFAPPFOLDER</SetProperty>
	<CustomAction Id='UseDefAppFolder' Property='APPFOLDER' Value='[DEFAPPFOLDER]' />
	<CustomAction Id='UseOvrAppFolder' Property='APPFOLDER' Value='[OVRAPPFOLDER]' /> <!-- from Overrides.wxi -->
	<CustomAction Id='UseRegAppFolder' Property='APPFOLDER' Value='[REGAPPFOLDER]' />

	<Property Id="REGAPPFOLDER">
	  <RegistrySearch Id='RegistryAppFolder' Root='HKLM' Key='SOFTWARE\[REGISTRYKEY]' Name='[APPFOLDERREGSZNAME]' Type='directory'/>
	</Property>
	<Property Id="APPFOLDERFOUND" Value='NotFound'>
	  <RegistrySearch Id='RegistryAppBool' Root='HKLM' Key='SOFTWARE\[REGISTRYKEY]' Name='[APPFOLDERREGSZNAME]' Type='raw'/>
	</Property>

	<SetProperty Id="EXPLANATIONTEXT" After="AppSearch" Value="Since this is an upgrade of an existing $(var.ApplicationName) $(var.MajorVersion) installation, you can't change the location of the data folder.">
		<![CDATA[DATAFOLDERFOUND = "AlreadyExisting"]]>
	</SetProperty>

	<Property Id="WIXUI_INSTALLDIR" Value="APPFOLDER" />
	<Property Id='WIXUI_PROJECTSDIR' Value='DATAFOLDER'/>

  	<UIRef Id='WixUI_DialogFlow'/>
	<UIRef Id="WixUI_ErrorProgressText" />

	<Directory Id='TARGETDIR' Name='SourceDir'>
		<Directory Id='DATAFOLDER' Name='[DATAFOLDER]'>
			<Component Id='RegKeySettingsDir' Permanent="yes" Guid='*'>
				<CreateFolder>
					<util:PermissionEx User="AuthenticatedUser" GenericAll="yes" />
				</CreateFolder>
				<RegistryKey Root='HKLM' Key='SOFTWARE\[REGISTRYKEY]' ForceDeleteOnUninstall='yes'>
					<RegistryValue Name="[DATAFOLDERREGSZNAME]" Type='string' Value='[DATAFOLDER]' KeyPath='yes'/>
				</RegistryKey>
			</Component>
		</Directory>
		<Directory Id='HARVESTDATAFOLDER' Name='.'>
			<Component Id='HarvestDataDir' Guid='*'>
				<CreateFolder>
					<util:PermissionEx User="AuthenticatedUser" GenericAll="yes" />
				</CreateFolder>
				<RegistryKey Root='HKLM' Key='SOFTWARE\[REGISTRYKEY]' ForceDeleteOnUninstall='yes'>
					<RegistryValue Name="[HARVESTDATAFOLDERREGSZNAME]" Type='string' Value='[OVRHARVESTDATAFOLDER]' KeyPath='yes'/>
				</RegistryKey>
			</Component>
		</Directory>
		<Directory Id='FontsFolder'/>
		<Directory Id="DesktopFolder" Name="Desktop">
			<Component Id="ApplicationShortcutDesktop" Guid="*">
				<Shortcut Id="ApplicationDesktopShortcut"
					Name="$(var.ApplicationName) $(var.MajorVersion)"
					Description="$(var.ApplicationName) $(var.MajorVersion)"
					Target="[APPFOLDER]$(var.SafeApplicationName).exe"
					WorkingDirectory="APPFOLDER"
					Icon="Application_Icon.ico"/>
				<RemoveFolder Id="DesktopFolder" On="uninstall"/>
				<RegistryValue
					Root="HKCU"
					Key="Software\$(var.SafeApplicationName)$(var.MajorVersion)"
					Name="installed"
					Type="integer"
					Value="1"
					KeyPath="yes"/>
			</Component>
		</Directory>
		<Directory Id='$(var.PFDir)' SourceName="Program Files">
			<Directory Id='APPFOLDER' Name='$(var.SafeApplicationName)$(var.MajorVersion)'>
				<Component Id='RegKeyValues' Guid='*'>
				  <RegistryKey Root='HKLM' Key='SOFTWARE\[REGISTRYKEY]' ForceDeleteOnUninstall='yes'>
					<RegistryValue Name="[APPFOLDERREGSZNAME]" Type='string' Value='[APPFOLDER]'/>
					<RegistryValue Name="$(var.SafeApplicationName)Version" Type='string' Value='$(var.VersionNumber)'/>
				  </RegistryKey>
				</Component>

				<Component Id='AppIcon' Guid='*'>
				  <File Id='AppIconFile' Name='App.ico' Source='..\resources\App.ico' KeyPath='yes'/>
				</Component>

				<Component Id='Vapor' Guid='3C4B8E68-6147-482F-B7ED-17C485024AEF' KeyPath='yes'/>
			</Directory>
		</Directory>

 		<Directory Id="ProgramMenuFolder"/>
	</Directory>

	<DirectoryRef Id="ProgramMenuFolder">
		<Component Id="ApplicationShortcutMenu" Guid="*">
			<Shortcut Id="ApplicationStartMenuShortcut"
				  Name="$(var.ApplicationName) $(var.MajorVersion)"
				  Description="$(var.ApplicationName) $(var.MajorVersion)"
				  Target="[APPFOLDER]$(var.SafeApplicationName).exe"
				  WorkingDirectory="APPFOLDER"
				  Icon="Application_Icon.ico"/>
			<Shortcut Id="UninstallProduct"
				  Name="Uninstall $(var.ApplicationName)"
				  Target="[SystemFolder]msiexec.exe"
				  Arguments="/x [ProductCode]"
				  Description="Uninstalls $(var.ApplicationName)" />
			<RegistryValue Root="HKCU" Key="Software\Microsoft\$(var.SafeApplicationName)$(var.MajorVersion)" Name="installed" Type="integer" Value="1" KeyPath="yes"/>
		</Component>
	</DirectoryRef>

	<?include ../Common/CustomComponents.wxi?>

	<!-- A "typical" install will install featues of level 3 and below.  A "complete" install will install features of level 1000 and below.
		 A "custom" install will display the tree view with items of value "3" and below selected by default. -->
	<Feature Id='Complete' Title='$(var.ApplicationName) $(var.MajorVersion).$(var.MinorVersion)' Description='The complete package.'
		Display='expand' Level='1' AllowAdvertise="no" InstallDefault="source" Absent='disallow' >
			<ComponentRef Id='Vapor'/>
			<ComponentGroupRef Id="HarvestedAppFiles" />
			<ComponentRef Id='RegKeyValues'/>
			<ComponentRef Id='RegKeySettingsDir'/>
			<ComponentRef Id='HarvestDataDir'/>
			<ComponentRef Id='AppIcon'/>

		<?include ../Common/CustomFeatures.wxi?>
	</Feature>
  </Product>
</Wix>
